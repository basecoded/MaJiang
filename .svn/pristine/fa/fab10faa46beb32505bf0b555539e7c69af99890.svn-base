package com.zxz.controller;

import java.net.InetSocketAddress;
import java.nio.charset.Charset;
import org.apache.log4j.Logger;
import org.apache.mina.common.DefaultIoFilterChainBuilder;
import org.apache.mina.common.IoAcceptor;
import org.apache.mina.common.IoAcceptorConfig;
import org.apache.mina.example.echoserver.ssl.BogusSSLContextFactory;
import org.apache.mina.filter.LoggingFilter;
import org.apache.mina.filter.SSLFilter;
import org.apache.mina.filter.codec.MyProtocolCodecFilter;
import org.apache.mina.filter.codec.textline.TextLineCodecFactory;
import org.apache.mina.transport.socket.nio.SocketAcceptor;
import org.apache.mina.transport.socket.nio.SocketAcceptorConfig;
import com.zxz.filter.MessageFilter;
import com.zxz.service.ServerHandler;


public class StartServer {
	
	private static final int PORT = 8081;
	/** Set this to true if you want to make the server SSL */
	private static final boolean USE_SSL = false;
	private static Logger logger = Logger.getLogger(StartServer.class);  
	
    public static void main(String[] args) throws Exception {
    	IoAcceptor acceptor = new SocketAcceptor();
		IoAcceptorConfig config = new SocketAcceptorConfig();
		DefaultIoFilterChainBuilder chain = config.getFilterChain();
		if (USE_SSL) {
			addSSLSupport(chain);
		}
		chain.addLast("codec", new MyProtocolCodecFilter(new TextLineCodecFactory( Charset.forName( "UTF-8" ))));
		//addLogger(chain);
		MessageFilter messageFilter = new MessageFilter();//信息过滤器
		chain.addLast("message", messageFilter);
		acceptor.bind(new InetSocketAddress(PORT), new ServerHandler(), config);
		logger.info("服务器启动，监听的端口号是:" + PORT);
//		// 记录debug级别的信息  
//        logger.debug("This is debug message.");  
//        // 记录info级别的信息  
//        logger.info("This is info message.");  
//        // 记录error级别的信息  
//        logger.error("This is error message.");  
    }

    private static void addSSLSupport(DefaultIoFilterChainBuilder chain)
            throws Exception {
        SSLFilter sslFilter = new SSLFilter(BogusSSLContextFactory
                .getInstance(true));
        chain.addLast("sslFilter", sslFilter);
        System.out.println("SSL ON");
    }

    private static void addLogger(DefaultIoFilterChainBuilder chain)
            throws Exception {
        chain.addLast("logger", new LoggingFilter());
        System.out.println("Logging ON");
    }
}
