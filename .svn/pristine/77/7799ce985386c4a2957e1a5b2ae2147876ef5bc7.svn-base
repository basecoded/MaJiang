package com.zxz.dao;

import java.util.List;

import org.junit.Test;

import com.zxz.domain.User;

public class UserDao extends BaseDao<User>{
	
	static UserDao userDao;
	static int id=0;
	
	private UserDao() {
	}
	
	public static UserDao getInstance(){
		if(userDao!=null){
			return userDao;
		}else{
			synchronized (UserDao.class) {
				userDao = new UserDao();
				return userDao;
			}
		}
	}
	
	
	
	public User findUser(User user) {
		User user2 = new User();
		if(id == 0){
			user2.setId(id);
			user2.setUserName("赵");
			//user2.setAuto(true);
			id ++ ;
		}else if(id == 1){
			user2.setId(id);
			user2.setUserName("钱");
			//user2.setAuto(true);
			id ++ ;
		}else if(id == 2){
			user2.setId(id);
			user2.setUserName("孙");
			//user2.setAuto(true);
			id ++ ;
		}else if(id == 3){
			user2.setId(id);
			user2.setUserName("李");
			//user2.setAuto(true);
			id ++ ;
		}else{
			user2.setId(id);
			user2.setUserName("游客"+id);
			//user2.setAuto(true);
			id ++ ;
		}
		return user2;
//		return super.queryForObject("User.query", user);
	}

	
	/**线上登录
	 * @param user
	 * @return
	 */
	public User findUser2(User user) {
		return super.queryForObject("User.query", user);
	}
	
	
	/**保存用户
	 * @param user
	 * @return
	 */
	public int saveUser(User user) {
		int id = super.insert("User.save", user);
		return id;
	}
	
	
	/**修改用户
	 * @param user
	 * @return
	 */
	public int modifyUser(User user) {
		int count = 0;
		count = super.update("User.modify", user);
		return count;
	}
	
	public static void main(String[] args) {
		int count = 0;
		UserDao userDao = getInstance();
		User user= new User();
		user.setUserName("赵");
		user.setPassword("dddd");
		user.setRoomId(1000+"d");
		user.setRoomCard(50);
		user.setId(1);
		count = userDao.update("User.modify", user);
	}
	
	
	
	@Test
	public void testModifyUser()
	{
		User user= new User();
		user.setUserName("hahah");
		user.setPassword("dddd");
		user.setRoomId(1000+"d");
		user.setRoomCard(100000);
		user.setId(1);
		modifyUser(user);
	}
	
	public List<User> queryList(User user) {
		return super.queryForList("User.queryList", user);
	}

	
	
	@Test
	public void testSaveUser()
	{
		User u= new User();
		u.setUserName("hahah");
		u.setPassword("dddd");
		//saveUser(u);
//		User findUser = findUser(u);
		u.setRoomCard(10000);
		List<User> queryList = queryList(u);
		System.out.println(queryList);
	}
	
}
